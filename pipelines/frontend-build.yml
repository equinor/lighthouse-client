trigger:
    branches:
        include:
            - main
            - dev

resources:
    repositories:
        - repository: self
        - repository: templates
          type: github
          name: equinor/lighthouse-infra
          endpoint: 'equinor'
          ref: infra/scope

# Global variables for the pipeline
variables:
    - template: /src/resources/web-client/web-client-variables.yml@templates
    - template: /src/variables/global-variables.yml@templates

    - name: 'repositoryName'
      value: lighthouse-client

stages:
    # build_stage stage. Docker build, tag and push
    - stage: build
      displayName: 'Docker - Build and Push'
      variables:
          envName: 'build'
          envRg: '${{ variables.envRgName }}'
          serviceConnection: '${{ variables.nonProdServiceConnection }}'
          containerRegistry: '${{ variables.containerRegistryName }}'
          envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'
          dockerfilePath: '/.docker/Dockerfile'
          dockerRegistryServiceConnection: '$(dockerRegistryServiceConnectionName)'

      # Docker Build
      jobs:
          - template: /src/resources/web-client/jobs/client-dockerbuild.yml@templates
            parameters:
                deploymentName: 'docker_build_push'
                dependsOn: ''
                environmentId: 'dev'
                envGroup: '${{ variables.envGroupName }}'
                dockerfilePath: '${{ variables.dockerfilePath }}'
                repository: '${{ variables.repositoryName }}'
                dockerRegistryServiceConnection: $(dockerRegistryServiceConnectionName)

    # Deploy to dev environment
    - stage: dev
      displayName: 'Deploy to dev'
      dependsOn: 'build'
      condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/dev'))
      variables:
          envName: 'dev'
          envLabel: 'non-prod'
          rgName: '${{ variables.envRgName }}'
          envGroupName: '$(globalPrefix)-$(fullAppName)-${{ variables.envName }}'
          serviceConnection: '${{ variables.nonProdServiceConnection }}'
          containerRegistry: '${{ variables.containerRegistryName }}'

      jobs:
          - template: /src/resources/web-client/jobs/client-deploy.yml@templates
            parameters:
                deploymentName: 'deploy_web'
                dependsOn: ''
                serviceConnection: '${{ variables.serviceConnection }}'
                environmentId: '${{ variables.envName }}'
                rgName: '${{variables.rgName}}'
                envGroup: '${{ variables.envGroupName }}'
                repository: '${{ variables.repositoryName }}'
                containerRegistry: '${{ variables.containerRegistry }}'
                appName: '$(appName)'