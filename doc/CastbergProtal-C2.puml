@startuml Lighthouse
' !includeurl /Style/C4-Style.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5
!include DEVICONS/react.puml
!include DEVICONS/dotnet.puml
!include DEVICONS/msql_server.puml
!include DEVICONS/database.puml
!include FONTAWESOME/users.puml


Person(user, "User", $sprite="users")  
Container(webClient, "WebClient", "webClient", $sprite="react")  
Rel(user, webClient, " ")
Container(auth, "Auth", " ")

' Facility Asset Model Section 
System_Boundary(fam, "Facility Asset Model | Lighhouse") {
    ContainerDb(scopeChangeControlDB, "Scope Change Control DB",  $sprite="database")  
    ContainerDb(lighthouseDB, "Lighthouse DB", "ProCoSys | MIPS", $sprite="database") 
    Container(famApi, "Fam Api", "web Api | out of Scope")  

    System(dataAdapter, "Lighthouse Adapter", "Data Adapter")
        
    Rel(dataAdapter, scopeChangeControlDB, "Write")
    Rel(dataAdapter, lighthouseDB, "Write")
 
}
' Facility Asset Model Section 
Boundary(lightgouse, "Lighthouse | API") {
    Container(scopeChangeControl, "Scope Change Control", "web API", $sprite="dotnet")
    Container(lighthouseApi, "Lighthouse Api", "web API | Construction Progress | HeatTrace", $sprite="dotnet")
    
    Rel(scopeChangeControl, scopeChangeControlDB, "Read / Write")
    Rel(lighthouseApi, lighthouseDB, "Read")


    Rel(webClient, scopeChangeControl, " ")
    Rel(webClient, lighthouseApi, " ")
}

 

Boundary(extenals, 'Externals') {
    Container(mips, "MIPS", "Api") 
    Container(mipsTIEAdapter, "MIPS TIE Adapter", "adapter") 
}

Boundary(externalsEquinor, 'Externals Equinor') {
    Container(stid, "STID", "Api")  
    Container(procosys, "ProCoSys", "Api") 

    Container(commonLib, "CommonLib", "Api")  
}

Container(tie, "TIE", "TIE1.5 / TIE 2.0")
Rel(tie, dataAdapter, "Write")

Rel(mips, tie, "Write")
Rel(stid, dataAdapter, "Write")
Rel(procosys, dataAdapter, "Write")
Rel(commonLib, dataAdapter, "Write")



@enduml